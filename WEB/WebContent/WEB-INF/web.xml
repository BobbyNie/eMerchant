<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>eMerchantWeb</display-name>
	<servlet>
		<description>dwr</description>
		<display-name>DWR</display-name>
		<servlet-name>dwrservlet</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServletWithToken</servlet-class>
		<init-param>
			<param-name>fileUploadMaxBytes</param-name>
			<param-value>25000</param-value>
		</init-param>
		<init-param>
			<param-name>accessLogLevel</param-name>
			<param-value>runtimeexception</param-value>
		</init-param>

		<!-- 使用自定义js返回函数，支持同步调用 -->
		<init-param>
			<param-name>org.directwebremoting.extend.Remoter</param-name>
			<param-value>org.directwebremoting.SyncRemoter</param-value>
		</init-param>

		<!-- 使用自定义jsdebuger -->
		<init-param>
			<param-name>org.directwebremoting.extend.DebugPageGenerator</param-name>
			<param-value>org.directwebremoting.impl.IcbcDebugPageGenerator</param-value>
		</init-param>
		<!-- This should NEVER be present in live -->
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>crossDomainSessionSecurity</param-name>
			<param-value>false</param-value>
		</init-param>

		<!-- Remove this unless you want to use active reverse ajax -->
		<init-param>
			<param-name>activeReverseAjaxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- By default DWR creates application scope objects when they are first 
			used. This creates them when the app-server is started -->
		<init-param>
			<param-name>initApplicationScopeCreatorsAtStartup</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- WARNING: allowing JSON-RPC connections bypasses much of the security 
			protection that DWR gives you. Take this out if security is important -->
		<init-param>
			<param-name>jsonRpcEnabled</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- WARNING: allowing JSONP connections bypasses much of the security 
			protection that DWR gives you. Take this out if security is important -->
		<init-param>
			<param-name>jsonpEnabled</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- data: URLs are good for small images, but are slower, and could OOM 
			for larger images. Leave this out (or keep 'false') for anything but small 
			images -->
		<init-param>
			<param-name>preferDataUrlSchema</param-name>
			<param-value>false</param-value>
		</init-param>

		<!-- This enables full streaming mode. It's probably better to leave this 
			out if you are running across the Internet -->
		<init-param>
			<param-name>maxWaitAfterWrite</param-name>
			<param-value>-1</param-value>
		</init-param>

		<!-- For more information on these parameters, see: - http://getahead.org/dwr/server/servlet 
			- http://getahead.org/dwr/reverse-ajax/configuration -->
		<load-on-startup>1</load-on-startup>
		<enabled>true</enabled>
		<async-supported>false</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwrservlet</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>